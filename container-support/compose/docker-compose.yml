version: "3.7"
networks:
  main:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
      driver: default
services:
  nats-server:
    image: ${LFH_NATS_IMAGE}
    restart: "always"
    networks:
      - main
    ports:
      - ${LFH_NATS_CLIENT_PORT}:${LFH_NATS_CLIENT_PORT}
    volumes:
      - ../certs:/certs
    command: server --tls \
      --tlscert=/certs/nats-server.crt \
      --tlskey=/certs/nats-server.key \
      --tlscacert=/certs/rootCA.crt
  zookeeper:
    image: ${LFH_ZOOKEEPER_IMAGE}
    networks:
      - main
    expose:
      - ${LFH_ZOOKEEPER_PORT}
  kafdrop:
    image: ${LFH_KAFDROP_IMAGE}
    restart: "always"
    networks:
      - main
    ports:
      - ${LFH_KAFDROP_PORT}:${LFH_KAFDROP_PORT}
    environment:
      KAFKA_BROKERCONNECT: ${LFH_KAFDROP_BROKER_CONNECT}
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
  kafka:
    image: ${LFH_KAFKA_IMAGE}
    restart: "always"
    networks:
      - main
    expose:
      - ${LFH_KAFKA_INTERNAL_LISTENER_PORT}
      - ${LFH_KAFKA_EXTERNAL_LISTENER_PORT}
    environment:
      KAFKA_ZOOKEEPER_CONNECT: ${LFH_KAFKA_ZOOKEEPER_CONNECT}
      KAFKA_LISTENERS: ${LFH_KAFKA_LISTENERS}
      KAFKA_ADVERTISED_LISTENERS: ${LFH_KAFKA_ADVERTISED_LISTENERS}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${LFH_KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}
      KAFKA_INTER_BROKER_LISTENER_NAME: ${LFH_KAFKA_INTER_BROKER_LISTENER_NAME}
    depends_on:
      - "zookeeper"
  orthanc:
    image: ${LFH_ORTHANC_IMAGE}
    restart: "always"
    networks:
      - main
    expose:
      - ${LFH_ORTHANC_HTTP_PORT}
